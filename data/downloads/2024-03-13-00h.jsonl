{"created":"2024-03-11 12:40:12","title":"CEAT: Continual Expansion and Absorption Transformer for Non-Exemplar Class-Incremental Learning","abstract":"In real-world applications, dynamic scenarios require the models to possess the capability to learn new tasks continuously without forgetting the old knowledge. Experience-Replay methods store a subset of the old images for joint training. In the scenario of more strict privacy protection, storing the old images becomes infeasible, which leads to a more severe plasticity-stability dilemma and classifier bias. To meet the above challenges, we propose a new architecture, named continual expansion and absorption transformer~(CEAT). The model can learn the novel knowledge by extending the expanded-fusion layers in parallel with the frozen previous parameters. After the task ends, we losslessly absorb the extended parameters into the backbone to ensure that the number of parameters remains constant. To improve the learning ability of the model, we designed a novel prototype contrastive loss to reduce the overlap between old and new classes in the feature space. Besides, to address the classifier bias towards the new classes, we propose a novel approach to generate the pseudo-features to correct the classifier. We experiment with our methods on three standard Non-Exemplar Class-Incremental Learning~(NECIL) benchmarks. Extensive experiments demonstrate that our model gets a significant improvement compared with the previous works and achieves 5.38%, 5.20%, and 4.92% improvement on CIFAR-100, TinyImageNet, and ImageNet-Subset.","sentences":["In real-world applications, dynamic scenarios require the models to possess the capability to learn new tasks continuously without forgetting the old knowledge.","Experience-Replay methods store a subset of the old images for joint training.","In the scenario of more strict privacy protection, storing the old images becomes infeasible, which leads to a more severe plasticity-stability dilemma and classifier bias.","To meet the above challenges, we propose a new architecture, named continual expansion and absorption transformer~(CEAT).","The model can learn the novel knowledge by extending the expanded-fusion layers in parallel with the frozen previous parameters.","After the task ends, we losslessly absorb the extended parameters into the backbone to ensure that the number of parameters remains constant.","To improve the learning ability of the model, we designed a novel prototype contrastive loss to reduce the overlap between old and new classes in the feature space.","Besides, to address the classifier bias towards the new classes, we propose a novel approach to generate the pseudo-features to correct the classifier.","We experiment with our methods on three standard Non-Exemplar Class-Incremental Learning~(NECIL) benchmarks.","Extensive experiments demonstrate that our model gets a significant improvement compared with the previous works and achieves 5.38%, 5.20%, and 4.92% improvement on CIFAR-100, TinyImageNet, and ImageNet-Subset."],"url":"http://arxiv.org/abs/2403.06670v2","category":"cs.CV"}
{"created":"2024-03-11 16:04:18","title":"SonoTraceLab -- A Raytracing-Based Acoustic Modelling System for Simulating Echolocation Behavior of Bats","abstract":"Echolocation is the prime sensing modality for many species of bats, who show the intricate ability to perform a plethora of tasks in complex and unstructured environments. Understanding this exceptional feat of sensorimotor interaction is a key aspect into building more robust and performant man-made sonar sensors. In order to better understand the underlying perception mechanisms it is important to get a good insight into the nature of the reflected signals that the bat perceives. While ensonification experiments are in important way to better understand the nature of these signals, they are as time-consuming to perform as they are informative. In this paper we present SonoTraceLab, an open-source software package for simulating both technical as well as biological sonar systems in complex scenes. Using simulation approaches can drastically increase insights into the nature of biological echolocation systems, while reducing the time- and material complexity of performing them.","sentences":["Echolocation is the prime sensing modality for many species of bats, who show the intricate ability to perform a plethora of tasks in complex and unstructured environments.","Understanding this exceptional feat of sensorimotor interaction is a key aspect into building more robust and performant man-made sonar sensors.","In order to better understand the underlying perception mechanisms it is important to get a good insight into the nature of the reflected signals that the bat perceives.","While ensonification experiments are in important way to better understand the nature of these signals, they are as time-consuming to perform as they are informative.","In this paper we present SonoTraceLab, an open-source software package for simulating both technical as well as biological sonar systems in complex scenes.","Using simulation approaches can drastically increase insights into the nature of biological echolocation systems, while reducing the time- and material complexity of performing them."],"url":"http://arxiv.org/abs/2403.06847v1","category":"eess.AS"}
{"created":"2024-03-11 16:45:53","title":"Numerical simulation of individual coil placement -- A proof-of-concept study for the prediction of recurrence after aneurysm coiling","abstract":"Rupture of intracranial aneurysms results in severe subarachnoidal hemorrhage, which is associated with high morbidity and mortality. Neurointerventional occlusion of the aneurysm through coiling has evolved to a therapeutical standard. The choice of the specific coil has an important influence on secondary regrowth requiring retreatment. Aneurysm occlusion was simulated either through virtual implantation of a preshaped 3D coil or with a porous media approach. In this study, we used a recently developed numerical approach to simulate aneurysm shapes in specific challenging aneurysm anatomies and correlated these with aneurysm recurrence 6 months after treatment. The simulation showed a great variety of coil shapes depending on the variability in possible microcatheter positions. Aneurysms with a later recurrence showed a tendency for more successful coiling attempts. Results revealed further trends suggesting lower simulated packing densities in aneurysms with reoccurrence. Simulated packing densities did not correlate with those calculated by conventional software, indicating the potential for our approach to offer additional predictive value. Our study, therefore, pioneers a comprehensive numerical model for simulating aneurysm coiling, providing insights into individualized treatment strategies and outcome prediction. Future directions involve expanding the model's capabilities to simulate intraprocedural outcomes and long-term predictions, aiming to refine occlusion quality criteria and validate prediction parameters in larger patient cohorts. This simulation framework holds promise for enhancing clinical decision-making and optimizing patient outcomes in endovascular aneurysm treatment.","sentences":["Rupture of intracranial aneurysms results in severe subarachnoidal hemorrhage, which is associated with high morbidity and mortality.","Neurointerventional occlusion of the aneurysm through coiling has evolved to a therapeutical standard.","The choice of the specific coil has an important influence on secondary regrowth requiring retreatment.","Aneurysm occlusion was simulated either through virtual implantation of a preshaped 3D coil or with a porous media approach.","In this study, we used a recently developed numerical approach to simulate aneurysm shapes in specific challenging aneurysm anatomies and correlated these with aneurysm recurrence 6 months after treatment.","The simulation showed a great variety of coil shapes depending on the variability in possible microcatheter positions.","Aneurysms with a later recurrence showed a tendency for more successful coiling attempts.","Results revealed further trends suggesting lower simulated packing densities in aneurysms with reoccurrence.","Simulated packing densities did not correlate with those calculated by conventional software, indicating the potential for our approach to offer additional predictive value.","Our study, therefore, pioneers a comprehensive numerical model for simulating aneurysm coiling, providing insights into individualized treatment strategies and outcome prediction.","Future directions involve expanding the model's capabilities to simulate intraprocedural outcomes and long-term predictions, aiming to refine occlusion quality criteria and validate prediction parameters in larger patient cohorts.","This simulation framework holds promise for enhancing clinical decision-making and optimizing patient outcomes in endovascular aneurysm treatment."],"url":"http://arxiv.org/abs/2403.06889v1","category":"cs.CE"}
{"created":"2024-03-11 13:33:09","title":"Deriving Dependently-Typed OOP from First Principles -- Extended Version with Additional Appendices","abstract":"The expression problem describes how most types can easily be extended with new ways to produce the type or new ways to consume the type, but not both. When abstract syntax trees are defined as an algebraic data type, for example, they can easily be extended with new consumers, such as print or eval, but adding a new constructor requires the modification of all existing pattern matches. The expression problem is one way to elucidate the difference between functional or data-oriented programs (easily extendable by new consumers) and object-oriented programs (easily extendable by new producers). This difference between programs which are extensible by new producers or new consumers also exists for dependently typed programming, but with one core difference: Dependently-typed programming almost exclusively follows the functional programming model and not the object-oriented model, which leaves an interesting space in the programming language landscape unexplored. In this paper, we explore the field of dependently-typed object-oriented programming by deriving it from first principles using the principle of duality. That is, we do not extend an existing object-oriented formalism with dependent types in an ad-hoc fashion, but instead start from a familiar data-oriented language and derive its dual fragment by the systematic use of defunctionalization and refunctionalization. Our central contribution is a dependently typed calculus which contains two dual language fragments. We provide type- and semantics-preserving transformations between these two language fragments: defunctionalization and refunctionalization. We have implemented this language and these transformations and use this implementation to explain the various ways in which constructions in dependently typed programming can be explained as special instances of the phenomenon of duality.","sentences":["The expression problem describes how most types can easily be extended with new ways to produce the type or new ways to consume the type, but not both.","When abstract syntax trees are defined as an algebraic data type, for example, they can easily be extended with new consumers, such as print or eval, but adding a new constructor requires the modification of all existing pattern matches.","The expression problem is one way to elucidate the difference between functional or data-oriented programs (easily extendable by new consumers) and object-oriented programs (easily extendable by new producers).","This difference between programs which are extensible by new producers or new consumers also exists for dependently typed programming, but with one core difference: Dependently-typed programming almost exclusively follows the functional programming model and not the object-oriented model, which leaves an interesting space in the programming language landscape unexplored.","In this paper, we explore the field of dependently-typed object-oriented programming by deriving it from first principles using the principle of duality.","That is, we do not extend an existing object-oriented formalism with dependent types in an ad-hoc fashion, but instead start from a familiar data-oriented language and derive its dual fragment by the systematic use of defunctionalization and refunctionalization.","Our central contribution is a dependently typed calculus which contains two dual language fragments.","We provide type- and semantics-preserving transformations between these two language fragments: defunctionalization and refunctionalization.","We have implemented this language and these transformations and use this implementation to explain the various ways in which constructions in dependently typed programming can be explained as special instances of the phenomenon of duality."],"url":"http://arxiv.org/abs/2403.06707v1","category":"cs.PL"}
